package ru.bsu.webdev.zmeyouka;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;

public class Snake {
	public int x;
	public int y;
	protected Color lineColor = Color.BLACK;
	protected Color fillHeadColor = Color.RED;
	protected Color fillBodyColor = Color.YELLOW;
	protected List<Pair<Integer, Integer>> body = new LinkedList<>();

	public Snake(int x, int y) {
		this.x = x;
		this.y = y;
	}

	public void setHeadColor(Color c) {
		this.fillHeadColor = c;
	}

	public void setBodyColor(Color c) {
		this.fillBodyColor = c;
	}
	
	public void addCell() {
		
	}
	
	public void render(Graphics g) {
		g.setColor(fillHeadColor);
		g.fillRect(x * GameMap.H, y * GameMap.H, GameMap.H, GameMap.H);
		g.setColor(lineColor);
		g.drawRect(x * GameMap.H, y * GameMap.H, GameMap.H, GameMap.H);
	}

	public void Move(KeyEvent pressedKey) {
		
		switch(pressedKey.getKeyCode()) {
			case KeyEvent.VK_W:
				y = y > 2 ? y-1 : 1;
				break;
				
			case KeyEvent.VK_A:
				x = x > 2 ? x-1 : 1;
				break;
				
			case KeyEvent.VK_S:
				y = y < M-1 ? y+1 : M;
				break;
				
			case KeyEvent.VK_D:
				x = x < N-1 ? y+1 : N;
				break;
		}
		
		if (pressedKeys.get(KeyEvent.VK_W)) { // up
			if (y > 1) tank.y--;
		}
		if (pressedKeys.get(KeyEvent.VK_A)) { // left
			if (tank.x > 1) tank.x--;
		}
		if (pressedKeys.get(KeyEvent.VK_S)) { // down
			if (tank.y < M) tank.y++;
		}
		if (pressedKeys.get(KeyEvent.VK_D)) { // right
			if (tank.x < N) tank.x++;
		}

		for (Tank item : items) {
			if (item.y < M) {
				item.y++;
			}
			else if (item.y == M) { // enemy reached the bottom
				item.y = Randomizer.getInt(1, 3);
				item.x = Randomizer.getInt(1, N);
			}
		}
	}
}
